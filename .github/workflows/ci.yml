name: CI

on:
  push:
    branches:
      - 'blog'

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/mlcdf/blog:latest
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/mlcdf/blog:buildcache
          cache-to: type=registry,ref=ghcr.io/mlcdf/blog:buildcache,mode=max

  build-website:
    needs: build-image
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/mlcdf/blog:latest
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Build website
        env:
          SITEURL: ${{ secrets.SITEURL }}
          KEY: ${{ secrets.KEY }}
        run: |
          ./scripts/publish.sh

      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: /website

  deploy:
    needs: build-website
    runs-on: ubuntu-latest
    container:
      image: rclone/rclone
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build

      - name: Display structure of downloaded files
        run: ls -R

      - name: Deploy
        env:
          RCLONE_CONFIG_CELLAR_ACCESS_KEY_ID: ${{ secrets.CELLAR_ADDON_KEY_ID }}
          RCLONE_CONFIG_CELLAR_SECRET_ACCESS_KEY: ${{ secrets.CELLAR_ADDON_KEY_SECRET }}
          RCLONE_CONFIG_CELLAR_ENDPOINT: ${{ secrets.CELLAR_ADDON_HOST }}
          RCLONE_CONFIG_CELLAR_TYPE: "s3"
          MY_DOMAIN: "${{ secrets.MY_DOMAIN }}"
        run: |
          rclone sync . cellar:$MY_DOMAIN --progress --s3-acl=public-read
